[{"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/index.js":"1","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/reportWebVitals.js":"2","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/App.js":"3","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/Navbar.js":"4","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/HomeScreen.js":"5","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/productsData.js":"6","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/slideData.js":"7","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/ImageSlider.js":"8","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/Product.js":"9","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/ProductScreen.js":"10","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/CartScreen.js":"11","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/Footer.js":"12","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/LoginScreen.js":"13","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/Rating.js":"14","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/store.js":"15","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/reducers/productReducers.js":"16","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/constants/productConstants.js":"17","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/actions/productActions.js":"18","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/reducers/cartReducers.js":"19","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/constants/cartConstants.js":"20","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/actions/cartActions.js":"21","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/reducers/userReducer.js":"22","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/constants/userConstants.js":"23","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/actions/userActions.js":"24","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/MenuItems.js":"25","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/UseDetectOutsideClick.js":"26","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/ProfileScreen.js":"27","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/ShippingScreen.js":"28","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/PaymentScreen.js":"29","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/PlaceOrderScreen.js":"30","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/OrderScreen.js":"31","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/Message.js":"32","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/Spinner.js":"33","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/CheckoutSteps.js":"34"},{"size":558,"mtime":1607897759741,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1607044994128,"results":"37","hashOfConfig":"36"},{"size":1539,"mtime":1609540427766,"results":"38","hashOfConfig":"36"},{"size":6864,"mtime":1609508432532,"results":"39","hashOfConfig":"36"},{"size":1392,"mtime":1609557672139,"results":"40","hashOfConfig":"36"},{"size":2646,"mtime":1607895399660,"results":"41","hashOfConfig":"36"},{"size":283,"mtime":1607213217846,"results":"42","hashOfConfig":"36"},{"size":624,"mtime":1607216001673,"results":"43","hashOfConfig":"36"},{"size":1173,"mtime":1608208464048,"results":"44","hashOfConfig":"36"},{"size":5174,"mtime":1609557750097,"results":"45","hashOfConfig":"36"},{"size":4327,"mtime":1609619267741,"results":"46","hashOfConfig":"36"},{"size":1193,"mtime":1607650582159,"results":"47","hashOfConfig":"36"},{"size":5851,"mtime":1609513376071,"results":"48","hashOfConfig":"36"},{"size":1435,"mtime":1607649457807,"results":"49","hashOfConfig":"36"},{"size":1776,"mtime":1609634865927,"results":"50","hashOfConfig":"36"},{"size":1057,"mtime":1607949915754,"results":"51","hashOfConfig":"36"},{"size":361,"mtime":1607911176423,"results":"52","hashOfConfig":"36"},{"size":1230,"mtime":1607911616032,"results":"53","hashOfConfig":"36"},{"size":1525,"mtime":1609626713722,"results":"54","hashOfConfig":"36"},{"size":234,"mtime":1609626437821,"results":"55","hashOfConfig":"36"},{"size":1436,"mtime":1609626918667,"results":"56","hashOfConfig":"36"},{"size":2170,"mtime":1609503969498,"results":"57","hashOfConfig":"36"},{"size":888,"mtime":1609501963093,"results":"58","hashOfConfig":"36"},{"size":4082,"mtime":1609508357207,"results":"59","hashOfConfig":"36"},{"size":501,"mtime":1609416720844,"results":"60","hashOfConfig":"36"},{"size":713,"mtime":1609305636983,"results":"61","hashOfConfig":"36"},{"size":4719,"mtime":1609513363603,"results":"62","hashOfConfig":"36"},{"size":2562,"mtime":1609625889713,"results":"63","hashOfConfig":"36"},{"size":1676,"mtime":1609627897956,"results":"64","hashOfConfig":"36"},{"size":4487,"mtime":1609635085288,"results":"65","hashOfConfig":"36"},{"size":2783,"mtime":1609558665200,"results":"66","hashOfConfig":"36"},{"size":295,"mtime":1609588789933,"results":"67","hashOfConfig":"36"},{"size":288,"mtime":1609558342845,"results":"68","hashOfConfig":"36"},{"size":1660,"mtime":1609603707682,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1r2lgq3",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/index.js",[],["145","146"],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/reportWebVitals.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/App.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/Navbar.js",["147"],"import React, { useState, useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport '../styles/Navbar.css'\nimport FingerprintIcon from '@material-ui/icons/Fingerprint'\nimport { IconButton } from '@material-ui/core'\nimport Badge from '@material-ui/core/Badge'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Search } from '@material-ui/icons'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { logout } from '../actions/userActions.js'\nimport { AdminMenuItems } from './MenuItems'\nimport UseDetectOutsideClick from './UseDetectOutsideClick'\n\nconst useStyles = makeStyles({\n  root: {\n    color: 'white',\n  },\n})\n\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -3,\n    top: 4,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 4px',\n  },\n}))(Badge)\n\nconst Navbar = () => {\n  const classes = useStyles()\n\n  const [click, setClick] = useState(false)\n  const handleClick = () => setClick(!click) // Set click to true\n  const closeMobileMenu = () => setClick(false) // Set click to false\n\n  const adminDropdownRef = useRef(null)\n  const adminUserDropdownRef = useRef(null)\n  const [isAdminActive, setIsAdminActive] = UseDetectOutsideClick(\n    adminDropdownRef,\n    false\n  )\n  const [isAdminUserActive, setIsAdminUserActive] = UseDetectOutsideClick(\n    adminUserDropdownRef,\n    false\n  )\n\n  //Calls/Invoke an action\n  const dispatch = useDispatch()\n\n  // Brings in Data from the global state (Redux Store)\n  const cart = useSelector(state => state.cart)\n  const { cartItems } = cart\n\n  // Calculate the Total/Available Products/items in the cart\n  const countProduct = cartItems?.length\n\n  // Brings in Data from the global state (Redux Store)\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  // Logout Handler\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  // Dropdown Handler\n  const adminHandler = () => setIsAdminActive(!isAdminActive)\n  const adminUserHandler = () => setIsAdminUserActive(!isAdminUserActive)\n\n  return (\n    <header className='navbar'>\n      <Link to='/' className='navbar__logo'>\n        CITRUS\n        <FingerprintIcon className='navbar__logo-icon' />\n      </Link>\n\n      <div className='navbar__menu-icon' onClick={handleClick}>\n        <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n      </div>\n\n      <ul className={click ? 'navbar__menu active' : 'navbar__menu'}>\n        <div className='navbar__search navbar__item' onClick={closeMobileMenu}>\n          <input\n            type='text'\n            className='navbar__search-Input'\n            placeholder='Search Products...'\n          />\n          <Search className='navbar__search-Icon' />\n        </div>\n        {userInfo && userInfo.isAdmin && (\n          <li className='navbar__item' onClick={adminHandler}>\n            <Link to='#'>\n              <span className='navbar__item-username'>\n                Setting\n                <i className='fas fa-caret-down' />\n              </span>\n            </Link>\n            <nav\n              ref={adminDropdownRef}\n              className={`menu ${isAdminActive ? 'active' : 'inactive'}`}\n            >\n              <ul>\n                {AdminMenuItems.map((item, index) => {\n                  return (\n                    <li key={index}>\n                      <Link\n                        className={item.cName}\n                        to={item.path}\n                        // onClick={logoutHandler()}\n                      >\n                        {item.title}\n                      </Link>\n                    </li>\n                  )\n                })}\n              </ul>\n            </nav>\n          </li>\n        )}\n        {userInfo ? (\n          <>\n            <li className='navbar__item' onClick={adminUserHandler}>\n              <Link to='#'>\n                <span className='navbar__item-username'>\n                  {userInfo?.name.split(' ')[0]}{' '}\n                  <i className='fas fa-caret-down' />\n                </span>\n              </Link>\n              <nav\n                ref={adminUserDropdownRef}\n                className={`menu ${isAdminUserActive ? 'active' : 'inactive'}`}\n              >\n                <ul>\n                  {/* {AdminUserMenuItems.map((item, index) => {\n                    return (\n                      <li key={index}>\n                        <Link\n                          className={item.cName}\n                          to={item.path}\n                          // onClick={logoutHandler()}\n                        >\n                          {item.title}\n                        </Link>\n                      </li>\n                    )\n                  })} */}\n                  <li className=''>\n                    <Link className='dropdown-link' to='/profile'>\n                      Profile\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      className=' dropdown-link'\n                      to='#'\n                      onClick={logoutHandler}\n                    >\n                      Log out\n                    </Link>\n                  </li>\n                </ul>\n              </nav>\n            </li>\n            {/* <li className='navbar__item'>\n              <Link\n                to='#'\n                className='navbar__links-mobile'\n                // onClick={logoutHandler}\n              >\n                LogOut\n              </Link>\n            </li> */}\n          </>\n        ) : (\n          <>\n            <li className='navbar__item'>\n              <Link\n                to='#'\n                className='navbar__links navbar__item-categories'\n                onClick={closeMobileMenu}\n              >\n                Categories <i className='fas fa-caret-down' />\n              </Link>\n            </li>\n            <li className='navbar__item'>\n              <Link\n                to='/login'\n                className='navbar__links-mobile'\n                onClick={closeMobileMenu}\n              >\n                Log In\n              </Link>\n            </li>\n          </>\n        )}\n\n        <li className='navbar__item'>\n          <Link\n            to='/cart'\n            className='navbar__item-cart'\n            onClick={closeMobileMenu}\n          >\n            <IconButton\n              aria-label='cart'\n              color='secondary'\n              className={classes.root}\n            >\n              <StyledBadge badgeContent={countProduct} color='secondary'>\n                <ShoppingCartIcon className='navbar__item-cart-icon' />\n              </StyledBadge>\n            </IconButton>\n          </Link>\n        </li>\n      </ul>\n    </header>\n  )\n}\n\nexport default Navbar\n","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/HomeScreen.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/productsData.js",[],["148","149"],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/slideData.js",[],["150","151"],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/ImageSlider.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/Product.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/ProductScreen.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/CartScreen.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/Footer.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/LoginScreen.js",["152","153","154","155","156","157"],"import React, { useState, useRef, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport '../styles/LoginScreen.css'\nimport { login, register } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n  const containerRef = useRef(null)\n\n  // Login Initial state\n  const loginEmail = useRef('')\n  const loginPassword = useRef('')\n\n  // Register Initial state\n  const registerName = useRef('')\n  const registerEmail = useRef('')\n  const registerPassword = useRef('')\n  const registerConfirmPassword = useRef('')\n\n  // Adds the active panel to the class\n  const signupAnimate = () => {\n    containerRef.current.classList.add('right-panel-active')\n  }\n  // Removes the active panel from the class\n  const signinAnimate = () => {\n    containerRef.current.classList.remove('right-panel-active')\n  }\n  // Calls/Invoke an action\n  const dispatch = useDispatch()\n\n  // Brings in Data from the global state (Redux Store)\n  const userLogin = useSelector(state => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  // Brings in Data from the global state (Redux Store)\n  const userRegister = useSelector(state => state.userRegister)\n  const {\n    loading: loadingRegister,\n    error: errorRegister,\n    userInfo: userInfoRegister,\n  } = userRegister\n\n  // Checks for Redirect\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  // Cause a side-effect when the component loads\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  // User login handler\n  const loginSubmitHandler = e => {\n    e.preventDefault()\n\n    dispatch(login(loginEmail.current.value, loginPassword.current.value))\n    // setLoginEmail('')\n    // setLoginPassword('')\n  }\n\n  // User register Handler\n  const registerSubmitHandler = e => {\n    if (\n      registerPassword.current.value !== registerConfirmPassword.current.value\n    ) {\n      alert('Password do not match')\n    } else {\n      dispatch(\n        register(\n          registerName.current.value,\n          registerEmail.current.value,\n          registerPassword.current.value\n        )\n      )\n    }\n\n    e.preventDefault()\n  }\n\n  return (\n    <main className='loginScreen'>\n      <div className='container' id='container' ref={containerRef}>\n        <div className='form-container sign-up-container'>\n          <form onSubmit={registerSubmitHandler}>\n            <h1>Create Account</h1>\n            <div className='social-container'>\n              <Link to='#' className='social'>\n                <i className='fab fa-facebook-f'></i>\n              </Link>\n              <Link to='#' className='social'>\n                <i className='fab fa-google-plus-g'></i>\n              </Link>\n              <Link to='#' className='social'>\n                <i className='fab fa-linkedin-in'></i>\n              </Link>\n            </div>\n            <span>or use your email for registration</span>\n            <input type='text' placeholder='Name' ref={registerName} />\n            <input type='email' placeholder='Email' ref={registerEmail} />\n            <input\n              type='password'\n              placeholder='Password'\n              ref={registerPassword}\n            />\n            <input\n              type='password'\n              placeholder='Confirm password'\n              ref={registerConfirmPassword}\n            />\n            <button type='submit'>Sign Up</button>\n          </form>\n        </div>\n        <div className='form-container sign-in-container'>\n          <form action='#' onSubmit={loginSubmitHandler}>\n            <h1>Sign in</h1>\n            <div className='social-container'>\n              <Link to='#' className='social'>\n                <i className='fab fa-facebook-f'></i>\n              </Link>\n              <Link to='#' className='social'>\n                <i className='fab fa-google-plus-g'></i>\n              </Link>\n              <Link to='#' className='social'>\n                <i className='fab fa-linkedin-in'></i>\n              </Link>\n            </div>\n            <span>or use your account</span>\n            <input\n              type='email'\n              placeholder='Email'\n              ref={loginEmail}\n              // value={loginEmail}\n              // onChange={e => setLoginEmail(e.target.value)}\n            />\n            <input\n              type='password'\n              placeholder='Password'\n              ref={loginPassword}\n              // value={loginPassword}\n              // onChange={e => setLoginPassword(e.target.value)}\n            />\n            <Link to='#'>Forgot your password?</Link>\n            <button type='submit'>Sign In</button>\n          </form>\n        </div>\n        <div className='overlay-container'>\n          <div className='overlay'>\n            <div className='overlay-panel overlay-left'>\n              <h1>Welcome Back!</h1>\n              <p>\n                To keep connected with us please login with your personal info\n              </p>\n              <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                <button className='ghost' id='signIn' onClick={signinAnimate}>\n                  Sign In\n                </button>\n              </Link>\n            </div>\n\n            <div className='overlay-panel overlay-right'>\n              <h1>Hello, Friend!</h1>\n              <p>Enter your personal details and start journey with us</p>\n              <Link\n                to={redirect ? `/register?redirect=${redirect}` : '/register'}\n              >\n                <button className='ghost' id='signUp' onClick={signupAnimate}>\n                  Sign Up\n                </button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default LoginScreen\n","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/Rating.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/store.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/reducers/productReducers.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/constants/productConstants.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/actions/productActions.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/reducers/cartReducers.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/constants/cartConstants.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/actions/cartActions.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/reducers/userReducer.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/constants/userConstants.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/actions/userActions.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/MenuItems.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/UseDetectOutsideClick.js",["158"],"import React, { useState, useEffect } from 'react'\n\nconst UseDetectOutsideClick = (el, initialState) => {\n  const [isActive, setIsActive] = useState(initialState)\n\n  useEffect(() => {\n    const pageClickEvent = e => {\n      //  If the active element exist and is clicked outside\n      if (el.current !== null && !el.current.contains(e.target)) {\n        setIsActive(!isActive)\n      }\n    }\n\n    // If the item is active (ie open) then listen for clicks\n    if (isActive) {\n      window.addEventListener('click', pageClickEvent)\n    }\n    return () => {\n      window.removeEventListener('click', pageClickEvent)\n    }\n  }, [isActive, el])\n\n  return [isActive, setIsActive]\n}\n\nexport default UseDetectOutsideClick\n","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/ProfileScreen.js",["159","160"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport '../styles/ProfileScreen.css'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst ProfileScreen = ({ history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n\n  // Calls/Invoke an action\n  const dispatch = useDispatch()\n\n  // Brings in Date from global state (Redux Store)\n  const userDetails = useSelector(state => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  // Brings in Date from global state (Redux Store)\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  // Brings in Date from global state (Redux Store)\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  // Cause a side-effect when the componet loads\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(getUserDetails('profile'))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user, success])\n\n  // Submit method/function\n  const submitHandler = e => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      // setMessage('Password do not match')\n      alert('Password do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  return (\n    <main className='profileScreen'>\n      <div className='profileScreen__user'>\n        <p className='title'>User Profile</p>\n        <div className='profileScreen__formContainer'>\n          <form onSubmit={submitHandler}>\n            <label htmlFor='name'>Name</label>\n            <input\n              type='text'\n              id='name'\n              placeholder='Enter name'\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n            <label htmlFor='email'>Email</label>\n            <input\n              type='email'\n              id='email'\n              placeholder='Enter email'\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n            />\n            <label htmlFor='password'>Password</label>\n            <input\n              type='password'\n              id='password'\n              placeholder='Enter password'\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n            />\n            <label htmlFor='comfirmPassword'>Confirm Password</label>\n            <input\n              type='password'\n              id='comfirmPassword'\n              placeholder='Confirm password'\n              value={confirmPassword}\n              onChange={e => setConfirmPassword(e.target.value)}\n            />\n            <button type='submit'>Update</button>\n          </form>\n        </div>\n      </div>\n\n      <div className='profileScreen__orders'>\n        <p className='title'>My Orders</p>\n        <div className='profileScreen__orders-table'>\n          <table>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>5fc1f6fdccbbc476e46f85eb</td>\n                <td>2020-11-28</td>\n                <td>1069.49</td>\n                <td>2020-11-28</td>\n                <td>2020-11-28</td>\n                <td>\n                  <Link to='#'>\n                    <button className='profileScreen__orders-btn'>\n                      Detials\n                    </button>\n                  </Link>\n                </td>\n              </tr>\n              <tr>\n                <td>5fc1f6fdccbbc476e46f85eb</td>\n                <td>2020-11-28</td>\n                <td>1069.49</td>\n                <td>2020-11-28</td>\n                <td>2020-11-28</td>\n                <td>\n                  <Link to='#'>\n                    <button className='profileScreen__orders-btn'>\n                      Detials\n                    </button>\n                  </Link>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default ProfileScreen\n","/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/ShippingScreen.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/PaymentScreen.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/PlaceOrderScreen.js",["161","162"],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/screens/OrderScreen.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/Message.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/Spinner.js",[],"/Users/chinecherempromiseharry/Documents/ReactJs crash-course/citrus-aura-links/frontend/src/components/CheckoutSteps.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":1,"column":27,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"163","replacedBy":"171"},{"ruleId":"165","replacedBy":"172"},{"ruleId":"163","replacedBy":"173"},{"ruleId":"165","replacedBy":"174"},{"ruleId":"167","severity":1,"message":"175","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"176","line":33,"column":11,"nodeType":"169","messageId":"170","endLine":33,"endColumn":18},{"ruleId":"167","severity":1,"message":"177","line":33,"column":20,"nodeType":"169","messageId":"170","endLine":33,"endColumn":25},{"ruleId":"167","severity":1,"message":"178","line":38,"column":14,"nodeType":"169","messageId":"170","endLine":38,"endColumn":29},{"ruleId":"167","severity":1,"message":"179","line":39,"column":12,"nodeType":"169","messageId":"170","endLine":39,"endColumn":25},{"ruleId":"167","severity":1,"message":"180","line":40,"column":15,"nodeType":"169","messageId":"170","endLine":40,"endColumn":31},{"ruleId":"167","severity":1,"message":"181","line":1,"column":8,"nodeType":"169","messageId":"170","endLine":1,"endColumn":13},{"ruleId":"167","severity":1,"message":"176","line":19,"column":11,"nodeType":"169","messageId":"170","endLine":19,"endColumn":18},{"ruleId":"167","severity":1,"message":"177","line":19,"column":20,"nodeType":"169","messageId":"170","endLine":19,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"182","line":10,"column":9,"nodeType":"169","messageId":"170","endLine":10,"endColumn":17},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["183"],["184"],["183"],["184"],"'useState' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'loadingRegister' is assigned a value but never used.","'errorRegister' is assigned a value but never used.","'userInfoRegister' is assigned a value but never used.","'React' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]